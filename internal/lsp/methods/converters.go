// Code generated by "generate"; DO NOT EDIT.
package methods

import (
	"github.com/kralicky/tools-lite/gopls/pkg/protocol"
)

// convertSymbolInformationToDocumentSymbol converts from SymbolInformation to DocumentSymbol
func convertSymbolInformationToDocumentSymbol(from protocol.SymbolInformation) protocol.DocumentSymbol {
	return protocol.DocumentSymbol{
		Name:           from.Name,
		Kind:           from.Kind,
		Range:          from.Location.Range,
		SelectionRange: from.Location.Range,
		Detail:         from.ContainerName,
		// Deprecated:     false,  // Could be added if needed
		// Tags:           nil,    // Could be added if needed
		// Children:       nil,    // SymbolInformation doesn't have hierarchy
	}
}

// convertSymbolInformationSliceToDocumentSymbolSlice converts a slice of SymbolInformation to a slice of DocumentSymbol
func convertSymbolInformationSliceToDocumentSymbolSlice(from []protocol.SymbolInformation) []protocol.DocumentSymbol {
	result := make([]protocol.DocumentSymbol, len(from))
	for i, item := range from {
		result[i] = convertSymbolInformationToDocumentSymbol(item)
	}
	return result
}
